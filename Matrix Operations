#include <stdio.h>
int main()
{
    printf("Welcome to the Matrix Operation's Applications \n");
    printf("Enter the number of rows and cilumns in the matrix \n");
    int m,n,i,j,k,sum[10][10],diff[10][10],result[10][10],transpose[10][10];
    printf("Please Enter Square matrix only \n");
    printf("Enter the number of rows \n");
    scanf("%d",&m);
    printf("Enter the number of columns \n");
    scanf("%d",&n);
    int arr1[10][10],arr2[10][10];
    printf("Enter the elements of the first matrix \n");
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
            scanf("%d",&arr1[i][j]);
    }
    printf("Enter the elements of the second matrix \n");
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
            scanf("%d",&arr2[i][j]);
    }
    printf("Which operation do you want to perform on the matrix \n");
    printf("1. Addition \n");
    printf("2. Subtraction \n");
    printf("3. Multiplication \n");
    printf("4. Transpose \n");
    int choice;
    printf("Enter choice\n");
    scanf("%d", &choice);
    switch (choice) {
        case 1:
            for(i=0;i<m;i++)
            {
                for(j=0;j<n;j++)
                sum[i][j]=arr1[i][j]+arr2[i][j];
            }
            printf("Sum of the Entered Matrix \n");
            for(i=0;i<m;i++)
            {
                for(j=0;j<n;j++)
                    printf("%d\t", sum[i][j]);
            }
            printf("\n");
            break;
        case 2:
            for(i=0;i<m;i++)
            {
                for(j=0;j<n;j++)
                diff[i][j]=arr1[i][j]-arr2[i][j];
            }
            printf("Sum of the Entered Matrix \n");
            for(i=0;i<n;i++)
            {
                for(j=0;j<n;j++)
                    printf("%d\t", diff[i][j]);
            }
            printf("\n");
            break;
        case 3:
            for (int i = 0; i < m; ++i) {
                  for (int j = 0; j < n; ++j) {
                     result[i][j] = 0;
                  }
               }

               // Multiplying first and second matrices and storing it in result
               for (i = 0; i < m; ++i) {
                  for (j = 0; j < n; ++j) {
                     for (k = 0; k <n; ++k) {
                        result[i][j] += arr1[i][k] * arr2[k][j];
                     }
                  }
               }
            printf("\nOutput Matrix:\n");
              for (int i = 0; i < m; ++i) {
                 for (int j = 0; j < n; ++j) {
                    printf("%d  ", result[i][j]);
                    if (j == n - 1)
                       printf("\n");
                 }
              }
        case 4:
            printf("Which Array you want to Transpose?\n");
            printf("1.First Matrix \n");
            printf("2.Second Matrix \n");
            int c;
            scanf("%d",&c);
            if(c==1)
            {
            for (i = 0; i < m; ++i)
            for (j = 0; j < n; ++j) {
              transpose[j][i] = arr1[i][j];
            }
            printf("\nTranspose of the matrix:\n");
            for (i = 0; i < m; ++i){
            for (j = 0; j < n; ++j) {
              printf("%d  ", transpose[i][j]);
              if (j == m - 1)
              printf("\n");
            }
            }
            }
            else if(c==2)
            {
                for (i = 0; i < m; ++i)
                for (j = 0; j < n; ++j) {
                  transpose[j][i] = arr1[i][j];
                }
                printf("\nTranspose of the matrix:\n");
                for (i = 0; i < m; ++i){
                for (j = 0; j < n; ++j) {
                  printf("%d  ", transpose[i][j]);
                  if (j == m - 1)
                  printf("\n");
                }
                }
            }
        default:
            break;
    }
    return 0;
}
